// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© exlux99

//@version=4
strategy("Bollinger Bands, RSI and ADX Trading System", initial_capital=10000, overlay=true)


timeinrange(res, sess) => time(res, sess) != 0


timer = color.red

tpPctInput = input(title='TakeProfit %', defval=0.8, group='Trade Settings')
slPctInput = input(title='StopLoss %', defval=0.8, group='Trade Settings')


//bgcolor(timeinrange(timeframe.period, "0300-0600") or timeinrange(timeframe.period, "0900-1300") or timeinrange(timeframe.period, "2030-2300") ? timer : na, transp=70)


//RSI
length = input( 20 )
overSold = input( 35 )
overBought = input( 65 )
price = close
vrsi = rsi(price, length)
co = crossover(vrsi, overSold)
cu = crossunder(vrsi, overBought)
//if (not na(vrsi))


//BB
lengthB = input(60, minval=1)
src = input(close, title="Source")
mult = input(2.0, minval=0.001, maxval=50, title="StdDev")
basis = sma(src, lengthB)
dev = mult * stdev(src, lengthB)
upper = basis + dev
lower = basis - dev


//adx
adxlen = input(14, title="ADX Smoothing")
dilen = input(14, title="DI Length")
dirmov(len) =>
	up = change(high)
	down = -change(low)
	plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
	minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
	truerange = rma(tr, len)
	plus = fixnan(100 * rma(plusDM, len) / truerange)
	minus = fixnan(100 * rma(minusDM, len) / truerange)
	[plus, minus]
adx(dilen, adxlen) =>
	[plus, minus] = dirmov(dilen)
	sum = plus + minus
	adx = 100 * rma(abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)
sig = adx(dilen, adxlen)

longEntry = close < upper and crossover(vrsi,overSold) and sig < 32 //and (timeinrange(timeframe.period, "0301-0600") or timeinrange(timeframe.period, "0901-1300") or timeinrange(timeframe.period, "2031-2300"))

shortEntry = close > upper and crossunder(vrsi,overBought) and sig < 32 //and (timeinrange(timeframe.period, "0301-0600") or timeinrange(timeframe.period, "0901-1300") or timeinrange(timeframe.period, "2031-2300"))


tp=input(90, step=10)
sl=input(90, step=10)

longTPAmount = longEntry ? close + (close * tpPctInput / 100): 0
longSLAmount = longEntry ? close - (close * slPctInput / 100): 0
shortTPAmount = shortEntry ? close - (close * tpPctInput / 100): 0
shortSLAmount = shortEntry ? close + (close * slPctInput / 100): 0

tradeQty = strategy.equity / close

strategy.entry("long", strategy.long, qty=tradeQty, when=longEntry)
strategy.exit("X_long", "long", qty_percent=100, limit=longTPAmount, stop=longSLAmount)
strategy.close("long",when=crossunder(close, basis))

strategy.entry('short', strategy.short, qty=tradeQty, when=shortEntry)
strategy.exit("x_short", "short", qty_percent=100, limit=shortTPAmount, stop=shortSLAmount)
strategy.close("short",when=crossover(close, basis))





