// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© cryptos72

//@version=5
strategy(
     "Strat.HA_VWAP", 
     overlay=true, 
     initial_capital=10000,
     commission_type=strategy.commission.percent,
     commission_value=0,
     slippage=0
     )

distFromVWAPInput = input.float(title='Distance from VWAP in Price %', defval=0.0, step=0.05, group='VWAP Distance')
nbSignalInput = input.int(title='Signals Before Entry', defval=2, minval=1, maxval=4, step=1)

enableEMAInput = input.bool(defval=true, title='Trade According to EMA Trend', group='EMA')
emaLengthInput = input.int(title='EMA Length', defval=200, minval=1, step=1, group='EMA')

// Fixed % TP/SL
fixedPctExitGroup = 'Fixed % - Take Profit / Stop Loss'
enableTPSLInput = input.bool(defval=true, title='Enable Additionnal TP/SL', group=fixedPctExitGroup)
tpPctInput = input.float(title='Take Profit %', defval=7.0, group=fixedPctExitGroup, minval=0, step=0.1)
slPctInput = input.float(title='Stop Loss %', defval=7.0, group=fixedPctExitGroup, minval=0, step=0.1)


ema = ta.ema(close, emaLengthInput)
heikinashi_open = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, open)
heikinashi_close = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, close)

//plot(close, title='Heikin Ashi', color=color.orange, linewidth=2)

vwap = ta.vwap(hlc3)
plot(vwap, title='VWAP', color=color.yellow, linewidth=2)

plot(enableEMAInput ? ema: na, title='EMA', color=color.blue, linewidth=2)

distanceFromVWAP = math.abs((vwap-heikinashi_close) / heikinashi_close * 100)
plotchar(distanceFromVWAP, "Distance from VWAP", "", location.top, size = size.tiny)

longSignal =  strategy.position_size == 0
              and heikinashi_close < vwap 
              and distanceFromVWAP > distFromVWAPInput 
              and heikinashi_close > heikinashi_close[1]
              and heikinashi_close > heikinashi_open[1]
              and (not enableEMAInput or close > ema)


              
shortSignal = strategy.position_size == 0
              and heikinashi_close > vwap 
              and distanceFromVWAP > distFromVWAPInput
              and heikinashi_close < heikinashi_close[1]
              and heikinashi_close < heikinashi_open[1]
              and (not enableEMAInput or close < ema)

              

plotshape(longSignal ? close: na, color=color.green, location=location.belowbar, text='L', style=shape.diamond, size=size.tiny)
plotshape(shortSignal ? close: na, color=color.red, location=location.abovebar, text='S', style=shape.diamond, size=size.tiny)

bool longEntry = longSignal
bool shortEntry = shortSignal

if nbSignalInput == 2
    longEntry := longSignal and longSignal[1]
    shortEntry := shortSignal and shortSignal[1]
else if nbSignalInput == 3
    longEntry := longSignal and longSignal[1] and longSignal[2]
    shortEntry := shortSignal and shortSignal[1] and shortSignal[2]
else if nbSignalInput == 4
    longEntry := longSignal and longSignal[1] and longSignal[2] and longSignal[3]
    shortEntry := shortSignal and shortSignal[1] and shortSignal[2] and shortSignal[3]
    
    
tradeQty = strategy.equity / close

//TP & SLlongSignal
float longTPAmount = na
float longSLAmount = na
float shortTPAmount = na
float shortSLAmount = na
float entryAmount = na


longTPAmount := longEntry ? close + (close * tpPctInput / 100): longTPAmount[1]
longSLAmount := longEntry ? close - (close * slPctInput / 100): longSLAmount[1]
shortTPAmount := shortEntry ? close - (close * tpPctInput / 100): shortTPAmount[1]
shortSLAmount := shortEntry ? close + (close * slPctInput / 100): shortSLAmount[1]

// Trade Entries
strategy.entry("LongEntry", strategy.long, qty=tradeQty, when=longEntry)
strategy.entry("ShortEntry", strategy.short, qty=tradeQty, when=shortEntry)

// Trade Exits
if enableTPSLInput
    strategy.exit("LongExit", "LongEntry", qty_percent=100, limit=longTPAmount, stop=longSLAmount)
    strategy.exit("ShortExit", "ShortEntry", qty_percent=100, limit=shortTPAmount, stop=shortSLAmount)

// Trade closes
strategy.close(id="LongEntry", when=close >= vwap)
strategy.close(id="ShortEntry", when=close <= vwap)
